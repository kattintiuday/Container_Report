---
    - include_tasks: tasks/removetemp.yml      
    - name: " To Create File with current date "
      lineinfile:
        path: "{{ reportdir }}/Node_Best_Savings_{{ date }}.csv"
        line: "NODE,PROTECTED_GB,DEDUPSAVINGS_GB,COMPSAVINGS_GB,OVERALL_SAVINGS_GB,OVERALL_SAVINGS_PCT"
        create: true      
    - name: "To get Container Storage pool space savings"
      dsmadmc:
        command: "SELECT SUBSTR(s.ENTITY,1,20) AS NODE, (CAST(FLOAT(SUM(s.bytes_protected))/1024/1024/1024 AS DECIMAL(12,2))) AS PROTECTED_GB, (CAST(FLOAT(SUM(s.dedup_savings))/1024/1024/1024 AS DECIMAL(12,2))) AS DEDUPSAVINGS_GB, (CAST(FLOAT(SUM(s.comp_savings))/1024/1024/1024 AS DECIMAL(12,2))) AS COMPSAVINGS_GB, (CAST(FLOAT(SUM(s.comp_savings)+SUM(s.dedup_savings))/1024/1024/1024 AS DECIMAL(12,2))) AS OVERALL_SAVINGS_GB,COALESCE((CAST(FLOAT(SUM(s.dedup_savings)+SUM(s.comp_savings))/FLOAT(SUM(s.bytes_protected))*100 AS DECIMAL(5,2))),0) AS OVERALL_SAVINGS_PCT from summary_extended s WHERE activity='BACKUP' or activity='ARCHIVE' GROUP BY S.ENTITY ORDER BY OVERALL_SAVINGS_PCT DESC FETCH FIRST 20 ROWS ONLY > {{ tempcontainer }}"
        se: "{{ lookup('env', 'tsm_server_node') }}"
        id: "{{ lookup('env', 'tsm_app_user') }}"
        pa: "{{ lookup('env', 'tsm_app_password') }}"
        dataonly: true
        comma: true
      register: output
    - debug: 
        msg: "{{output.stdout_lines}}"
    - name: Read data from Tempfile
      slurp:
        src: "{{ tempcontainer }}"
      register: file1_data
    - name: Append data to Final file
      lineinfile:
        path: "{{ reportdir }}/Node_Best_Savings_{{ date }}.csv"
        line: "{{ item }}"
        create: yes
      with_items: "{{ file1_data['content'] | b64decode }}"                           
    - include_tasks: tasks/removetemp.yml           