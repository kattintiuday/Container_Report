---
    - name: " Remove Temp file at end of Play"
      file:
        path: "{{ tempcontainer }}"
        state: absent
    - name: " To Create File with current date "
      lineinfile:
        path: "{{ reportdir }}/Container_Space_savings_{{ date }}.csv"
        line: "STGPOOL_NAME,TOTAL_SAVED_GB,DEDUP_SAVED_GB,COMP_SAVED_GB,USED_SPACE_GB"
        create: true             
    - name: "To get Container Storage pool space savings"
      dsmadmc:
        command: "select STGPOOL_NAME, (CAST(SPACE_SAVED_MB as FLOAT)/1024) as TOTAL_SAVED_GB, (CAST(DEDUP_SPACE_SAVED_MB as FLOAT)/1024) as DEDUP_SAVED_GB, (CAST(COMP_SPACE_SAVED_MB as FLOAT)/1024) as COMP_SAVED_GB, ((CAST(EST_CAPACITY_MB as FLOAT)/1024)*PCT_UTILIZED/100) as USED_SPACE_GB from stgpools where STG_TYPE='DIRECTORY' or STG_TYPE='CLOUD' order by TOTAL_SAVED_GB DESC > {{ tempcontainer }} "
        se: "{{ lookup('env', 'tsm_server_node') }}"
        id: "{{ lookup('env', 'tsm_app_user') }}"
        pa: "{{ lookup('env', 'tsm_app_password') }}"
        dataonly: true
        comma: true
      register: output
    - debug: 
        msg: "{{output.stdout_lines}}"
    - name: Read data from Tempfile
      slurp:
        src: "{{ tempcontainer }}"
      register: file1_data
    - name: Append data to Final file
      lineinfile:
        path: "{{ reportdir }}/Container_Space_savings_{{ date }}.csv"
        line: "{{ item }}"
        create: yes
      with_items: "{{ file1_data['content'] | b64decode }}"   
    - name: " Remove Temp file at end of Play"
      file:
        path: "{{ tempcontainer }}"
        state: absent    